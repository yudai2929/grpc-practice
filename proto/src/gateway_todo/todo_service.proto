syntax = "proto3";

package proto.gateway_todo;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

import "gateway_todo/todo.proto";

message GetTodoRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema : {
      title : "GetTodoRequest",
      description : "GetTodoRequest",
      required : [ "id" ],
    },
  };
  string id = 1;
}

message GetTodoResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema : {
      title : "GetTodoResponse",
      description : "GetTodoResponse",
      required : [ "todo" ],
    },
  };
  Todo todo = 1;
}

message CreateTodoRequest {

  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema : {
      title : "CreateTodoRequest",
      description : "CreateTodoRequest",
      required : [ "title", "description" ],
    },
  };
  string title = 1;
  string description = 2;
}

message CreateTodoResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema : {
      title : "CreateTodoResponse",
      description : "CreateTodoResponse",
      required : [ "todo" ],
    },
  };

  Todo todo = 1;
}

service TodoService {
  rpc GetTodo(GetTodoRequest) returns (GetTodoResponse) {
    option (google.api.http) = {
      get : "/todos/{id}"
    };
  }
  rpc CreateTodo(CreateTodoRequest) returns (CreateTodoResponse) {
    option (google.api.http) = {
      post : "/todos"
      body : "*"
    };
  }
}